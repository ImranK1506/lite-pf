---
const projects = [
	{
		title: "Featured Projects",
		url: "http://portfolio.com/projects",
		description: "Showcasing some of my most innovative and impactful projects across various technologies.",
		badges: ["Featured", "Innovation"],
	},
	{
		title: "Skills and Expertise",
		url: "http://portfolio.com/skills",
		description: "A comprehensive overview of my technical stack, including front-end and back-end technologies.",
		badges: ["Technical", "Expertise"],
	},
	{
		title: "Open Source Contributions",
		url: "http://portfolio.com/contributions",
		description: "Details about my contributions to open-source projects and how they make an impact.",
		badges: ["Open Source", "Impact"],
	},
	{
		title: "Testimonials",
		url: "http://portfolio.com/testimonials",
		description: "Read feedback and recommendations from colleagues, clients, and collaborators.",
		badges: ["Feedback", "Trust"],
	},
];

const initialMockBrowser = {
	title: "Welcome to my portfolio!",
	url: "http://portfolio.com",
	description: "Click a section to see details here.",
};
---

<main class="flex-grow flex flex-col items-center justify-center p-6 bg-gradient-to-r">
		<!-- Text Section -->
		<div class="text-center mb-8">
			<h1 class="font-heading text-3xl sm:text-4xl md:text-5xl leading-tight mb-4">
				Explore My Software Engineering Portfolio
			</h1>
			<p class="font-body text-lg sm:text-xl opacity-80">
				Dive into a curated showcase of my cutting-edge projects, technical expertise, and impactful contributions that shape the future of technology.
			</p>
		</div>

		<!-- Project Content -->
		<div class="container mx-auto grid gap-12 lg:grid-cols-2 items-start">
			<div class="grid gap-6 md:grid-cols-2 lg:grid-cols-2">
				{projects.map((project, index) => (
					<div
						key={index}
						class="card bg-gradient-to-r from-gray-800 via-gray-900 to-black shadow-xl border border-gray-700 hover:border-pink-500 group cursor-pointer transform transition-all hover:scale-105 h-full"
						data-title={project.title}
						data-url={project.url}
						data-description={project.description}
					>
						<div class="card-body flex flex-col justify-between p-6 h-full">
							<!-- Title and Badges -->
							<div>
								<h2 class="font-heading text-xl sm:text-2xl lg:text-3xl text-gray-100">
									{project.title}
								</h2>
								<div class="font-body flex flex-wrap gap-2 mt-2">
									{project.badges.map((badge) => (
										<div class="badge badge-secondary text-xs sm:text-sm md:text-base lg:text-lg font-medium">
											{badge}
										</div>
									))}
								</div>
							</div>

							<!-- Description -->
							<p class="mt-4 text-sm sm:text-base lg:text-lg font-light text-gray-400 group-hover:text-gray-200">
								{project.description}
							</p>
						</div>
					</div>
				))}
			</div>

		<!-- Mock Browser -->
		<div class="flex justify-center">
			<div class="
				mockup-browser border shadow-xl w-full
			 	max-w-xs sm:max-w-md md:max-w-lg lg:max-w-5xl
			 	h-[500px] sm:h-[600px] md:h-[700px] lg:h-[800px]">
				<!-- Toolbar -->
				<div class="mockup-browser-toolbar">
					<div id="mock-url" class="input">{initialMockBrowser.url}</div>
				</div>
				<!-- Content -->
				<div id="mock-content" class="flex justify-center px-4 py-16 p-6 h-full bg-gray-800">
					<article class="prose lg:prose-xl">
						<h3 class="font-body">{initialMockBrowser.title}</h3>
						<p class="font-body">{initialMockBrowser.description}</p>
					</article>
				</div>
			</div>
		</div>
	</div>
</main>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const projectCards = document.querySelectorAll(".card");

		projectCards.forEach((card) => {
			card.addEventListener("click", () => {
				const title = card.getAttribute("data-title");
				const url = card.getAttribute("data-url");
				const description = card.getAttribute("data-description");

				const mockUrl = document.getElementById("mock-url");
				const mockContent = document.getElementById("mock-content");

				if (mockUrl && mockContent) {
					mockUrl.textContent = url;
					mockContent.innerHTML =
					`
					<article class="prose lg:prose-xl">
					  <h3>${title}</h3>
					  <p>${description}</p>
					</article>
					`
				}
			});
		});
	});
</script>
